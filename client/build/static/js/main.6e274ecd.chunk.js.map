{"version":3,"sources":["serviceWorker.ts","components/pages/Home.tsx","types/customError.types.ts","components/pages/Login.tsx","components/pages/Profile.tsx","components/elements/Navbar.tsx","components/elements/ProgramInList.tsx","components/pages/Programs.tsx","components/pages/CreateProgram.tsx","components/elements/ExerciseInList.tsx","components/pages/ProgramPage.tsx","components/pages/404.tsx","components/elements/DeleteExercise.tsx","components/elements/AvailableExercisesList.tsx","components/pages/EditProgram.tsx","api/auth.api.ts","components/pages/Registration.tsx","components/pages/CoachUsers.tsx","components/elements/UserProgram.tsx","components/elements/AvailablePrograms.tsx","components/pages/UserPage.tsx","api/user.api.ts","components/pages/Athletes.tsx","components/App.tsx","api/programs.api.ts","models/category.ts","models/exercise.ts","models/program.ts","stores/programsStore.ts","stores/exerciseStore.ts","api/exercise.api.ts","models/role.ts","models/user.ts","stores/usersStore.ts","stores/profileStore.ts","stores/currentProgramStore.ts","stores/currentUserStore.ts","stores/rootStore.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","Home","inject","observer","authButtons","Col","md","className","Button","variant","onClick","props","history","push","Container","Row","this","store","profileStore","isAuth","React","Component","withRouter","CustomError","message","statusCode","body","code","Error","ValidationError","field","Login","login","a","validation","setLogin","state","email","password","setState","passwordError","emailError","errorView","generalError","toString","newState","console","log","getProfile","setProfile","schema","joi","object","string","tlds","allow","required","min","max","validateAsync","includes","InputGroup","FormControl","type","placeholder","onChange","e","target","value","Profile","user","role","name","age","NavbarCpmponent","logOut","authGeneralNavs","link","coach","noaAuthNavs","NavDropdown","Item","to","authNavs","Divider","generalNav","key","coachNavs","map","navItem","i","navs","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","id","Nav","title","Program","program","countList","Programs","setPrograms","programStore","clear","programs","length","CreateProgram","createProgram","newPorgram","data","errorBody","isAuthAndCoach","ExerciseInList","category","quantity","ProgramPage","backToProgramsList","currentProgramStore","getProgram","parseInt","params","error","exercises","exrcise","editButton","info","NoFound","DeleteExercise","deleteExercise","AvailableExercise","addExercise","EditProgram","updateProgram","editProgram","newName","successBody","successView","backToProrgramPage","getProgramAndEExercises","exerciseStore","getExercises","programExercises","availableExercises","getAvailable","exercise","replace","success","exercisesTable","loginRequest","axios","post","Registration","handleInputs","registration","validate","newUser","roleId","pathname","response","clearErrors","confirmPassword","ageError","nameError","number","integer","valid","ref","errors","CoachUsers","setUsers","usersStore","getCoachUsers","users","UserProgram","unassignProgram","currentUserStore","AvailableProgram","assignProgram","UserPage","backToUsersList","getUser","userInfo","userPrograms","availablePrograms","programsThatNotAssign","main","unassignProgramRequest","userId","programId","patch","assignProgramRequest","Athletes","get","status","App","fluid","path","exact","component","NotFound","createProgramRequest","assingPrExerciseRequest","exercisesIds","deletePrExerciseRequest","types","model","array","exercice","actions","self","setFields","fields","setExercises","cast","setName","flow","getParent","setIsAuth","newProgram","views","filter","some","userProgram","optional","prExercise","maybeNull","setFieldsWithPrograms","defaultUser","boolean","cleanAuthData","emailInput","passwordInput","profile","authStatus","defaultProgram","newFields","updatedProgram","defaultCurrentUserStore","pr","rootStore","createRootStore","create","onPatch","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch"],"mappings":"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","file":"static/js/main.6e274ecd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Home extends React.Component<StoreAndRouterProps, {}> {\r\n  render() {\r\n    const authButtons = (\r\n      <Col md={12} className=\"m-t-30\">\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"m-r-20\"\r\n          onClick={() => this.props.history.push(\"/login\")}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"m-r-20\"\r\n          onClick={() => this.props.history.push(\"/registration\")}\r\n        >\r\n          Sign Out\r\n        </Button>\r\n      </Col>\r\n    );\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={6} className=\"m-t-120\">\r\n            <Row>\r\n              <Col md={12}>\r\n                <h2>Fitnes App</h2>\r\n                <p className=\"t-a-just m-t-30\">\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                  Suscipit, sit. At voluptas ex temporibus minus. Dolorem, iure!\r\n                  Odio sapiente natus aliquid a eius sequi quam quia est\r\n                  accusantium, voluptatem eos.\r\n                </p>\r\n              </Col>\r\n              {this.props.store.profileStore.isAuth ? null : authButtons}\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col md={6} className=\"t-a-cen m-t-120\">\r\n            <img className=\"home-main-img\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","export class CustomError extends Error {\r\n  public body: string;\r\n  public code: number;\r\n  constructor(message: string, statusCode: number = 400) {\r\n    super(message);\r\n    this.body = message;\r\n    this.code = statusCode;\r\n  }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n  public body: string;\r\n  public field: string\r\n  constructor(message: string, field: string) {\r\n    super(message);\r\n    this.body = message;\r\n    this.field = field;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { LoginState } from \"../../types/state.types\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { ValidationError } from \"../../types/customError.types\";\r\nimport joi from \"@hapi/joi\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Login extends React.Component<StoreAndRouterProps, LoginState> {\r\n  constructor(props: StoreAndRouterProps) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      generalError: \"\",\r\n      errorView: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  async validation() {\r\n    try {\r\n      const schema = joi.object({\r\n        email: joi\r\n          .string()\r\n          .email({ tlds: { allow: false } })\r\n          .required(),\r\n        password: joi.string().min(8).max(30).required(),\r\n      });\r\n      await schema.validateAsync({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n    } catch (error) {\r\n      if (error.toString().includes(\"email\")) {\r\n        throw new ValidationError(error.toString(), \"emailError\");\r\n      } else if (error.toString().includes(\"password\")) {\r\n        throw new ValidationError(error.toString(), \"passwordError\");\r\n      }\r\n      throw new ValidationError(error, \"generalError\");\r\n    }\r\n  }\r\n\r\n  login = async () => {\r\n    try {\r\n      await this.validation();\r\n      await this.props.store.profileStore.setLogin(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      this.props.history.push(\"/profile\");\r\n    } catch (e) {\r\n      if (e.code) {\r\n        this.setState({\r\n          passwordError: \"\",\r\n          emailError: \"\",\r\n          errorView: true,\r\n          generalError: e.body,\r\n        });\r\n      } else if (e.field) {\r\n        const newState = {\r\n          [e.field]: e.body.toString(),\r\n          errorView: true,\r\n        } as Pick<LoginState, keyof LoginState>;\r\n        this.setState(\r\n          { emailError: \"\", passwordError: \"\", generalError: \"\" },\r\n          () => {\r\n            this.setState(newState);\r\n          }\r\n        );\r\n      } else {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  getProfile = async () => {\r\n    try {\r\n      await this.props.store.profileStore.setProfile();\r\n      this.props.history.push(\"/profile\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center m-t-120\">\r\n          <Col md={6}>\r\n            <h4 className=\"m-b-50\">Sign In:</h4>\r\n            <div>\r\n              <p>Email:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  type=\"email\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => {\r\n                    this.setState({ email: e.target.value });\r\n                  }}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.emailError}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div>\r\n              <p>Password:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  type=\"password\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => {\r\n                    this.setState({ password: e.target.value });\r\n                  }}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.passwordError}</p>\r\n              ) : null}\r\n            </div>\r\n            {this.state.errorView ? (\r\n              <p className=\"text-danger\">{this.state.generalError}</p>\r\n            ) : null}\r\n            <p className=\"text-success\">{this.props.location?.state}</p>\r\n            <Button variant=\"primary\" onClick={this.login}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Profile extends React.Component<StoreAndRouterProps, {}> {\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  async getProfile() {\r\n    try {\r\n      await this.props.store.profileStore.setProfile();\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-t-120\">\r\n          <Col md=\"6\">\r\n            <img\r\n              className={\r\n                store.profileStore.user?.role.name === \"coach\"\r\n                  ? \"profile-main-coach-pic\"\r\n                  : \"profile-main-athlete-pic\"\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md=\"6\" className=\"profile-info\">\r\n            <h3>{store.profileStore.user?.name}</h3>\r\n            <p>Role: {store.profileStore.user?.role.name}</p>\r\n            <p>Email: {store.profileStore.user?.email}</p>\r\n            <p>Age: {store.profileStore.user?.age}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { NavbarProps } from \"../../types/props.types\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { NavbarState } from \"../../types/state.types\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass NavbarCpmponent extends React.Component<NavbarProps, NavbarState> {\r\n  constructor(props: NavbarProps) {\r\n    super(props);\r\n    this.state = {\r\n      authGeneralNavs: [\r\n        { name: \"Create Program\", link: \"/createProgram\", coach: true },\r\n        { name: \"Athletes List\", link: \"/users/athletes\", coach: true },\r\n        { name: \"My Athletes\", link: \"/programs/users\", coach: true },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n  logOut = async () => {\r\n    try {\r\n      await this.props.store?.profileStore.logOut();\r\n      this.props.history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  async getProfile() {\r\n    try {\r\n      await this.props.store?.profileStore.setProfile();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n\r\n    const noaAuthNavs = (\r\n      <span>\r\n        <NavDropdown.Item>\r\n          <Link to=\"/login\">Sign In</Link>\r\n        </NavDropdown.Item>\r\n        <NavDropdown.Item>\r\n          <Link to=\"/registration\">Sign Out</Link>\r\n        </NavDropdown.Item>\r\n      </span>\r\n    );\r\n\r\n    const authNavs = (\r\n      <span>\r\n        <Link to=\"/profile\" className=\"dropdown-item\" role=\"button\">\r\n          {store?.profileStore.user?.name}\r\n        </Link>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item onClick={this.logOut}>Log Out</NavDropdown.Item>\r\n      </span>\r\n    );\r\n\r\n    const generalNav = (\r\n      <Link to=\"/programs\" className=\"nav-link\" key={\"programs\"}>\r\n        My Programs\r\n      </Link>\r\n    );\r\n\r\n    const coachNavs = this.state.authGeneralNavs.map((navItem, i) => {\r\n      return (\r\n        <Link to={navItem.link} className=\"nav-link\" key={navItem.name}>\r\n          {navItem.name}\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    const navs =\r\n      store?.profileStore.user?.role.name === \"coach\"\r\n        ? [...coachNavs, generalNav]\r\n        : generalNav;\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"sm\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className=\"navbar-wrap\"\r\n      >\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Fitnes App\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {store?.profileStore.isAuth ? navs : null}\r\n          </Nav>\r\n          <Nav>\r\n            <NavDropdown\r\n              title={store?.profileStore.isAuth ? \"Profile\" : \"Sign In/Out\"}\r\n              id=\"collasible-nav-dropdown\"\r\n            >\r\n              {store?.profileStore.isAuth ? authNavs : noaAuthNavs}\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavbarCpmponent);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProgramProps } from \"../../types/props.types\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst Program = (props: ProgramProps) => {\r\n  return (\r\n    <Col md={5} className=\"program-list\">\r\n      <Link to={`/programs/${props.program.id}`} className=\"list-link\">\r\n        <div className=\"list-box\">\r\n          <div className=\"align-verical\">\r\n            <img className=\"program-icon\" />\r\n            <span>\r\n              {props.countList}. {props.program.name}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Program;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Program from \"../elements/ProgramInList\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Programs extends React.Component<StoreAndRouterProps, {}> {\r\n  componentDidMount() {\r\n    this.setPrograms();\r\n  }\r\n\r\n  async setPrograms() {\r\n    try {\r\n      await this.props.store.programStore.clear();\r\n      await this.props.store.programStore.setPrograms();\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n    return (\r\n      <Container className=\"m-t-70\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <h3 className=\"m-b-30\">Your programs:</h3>\r\n\r\n            {store.programStore.programs.length > 0 ? (\r\n              store.programStore.programs.map((program, i) => {\r\n                return (\r\n                  <Program key={i} program={program} countList={++i}></Program>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>You dont have programs</p>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Programs);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { CreateProgramState } from \"../../types/state.types\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { ValidationError } from \"../../types/customError.types\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass CreateProgram extends React.Component<\r\n  StoreAndRouterProps,\r\n  CreateProgramState\r\n> {\r\n  constructor(props: StoreAndRouterProps) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      errorBody: \"\",\r\n      errorView: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.store.profileStore.isAuthAndCoach()) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  validation() {\r\n    if (this.state.name.length < 3) {\r\n      throw new ValidationError(`\"name\" is not allowed to be empty`, \"name\");\r\n    }\r\n  }\r\n\r\n  createProgram = async () => {\r\n    try {\r\n      this.validation();\r\n      const newPorgram = await this.props.store.programStore.createProgram(\r\n        this.state.name\r\n      );\r\n      this.props.history.push(`/programs/${newPorgram.data.id}`);\r\n    } catch (error) {\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n      if (error.code || error.field) {\r\n        this.setState({ errorBody: error.body, errorView: true });\r\n      }\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center m-t-120\">\r\n          <Col md={6}>\r\n            <h3 className=\"new-program-title\">New Program</h3>\r\n            <img className=\"program-icon\" />\r\n            <div className=\"m-b-30 m-t-50\">\r\n              <p>Name:</p>\r\n              <InputGroup className=\"edit-program-input\">\r\n                <FormControl\r\n                  className=\"mb-3 edit-program-input\"\r\n                  placeholder=\"Enter name of program\"\r\n                  onChange={(e) => {\r\n                    this.setState({ name: e.target.value });\r\n                  }}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.errorBody}</p>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"primary\" onClick={this.createProgram}>\r\n              Create\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateProgram);\r\n","import React from \"react\";\r\nimport { ExerciseListProps } from \"../../types/props.types\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst ExerciseInList = (props: ExerciseListProps) => {\r\n  return (\r\n    <Col md={4} className=\"exercise-list-container\">\r\n      <div className=\"exercise-box\">\r\n        <img className=\"exercise-icon\" />\r\n        <h5 className=\"inline\">{props.name}</h5>\r\n        <div className=\"exercise-info\">\r\n          <small>\r\n            <span className=\"bold-text\">Category:</span> {props.category}\r\n          </small>\r\n          <small>\r\n            {\" \"}\r\n            <span className=\"bold-text\">Quantity:</span> x{props.quantity}\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ExerciseInList;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { StoreRouterIdParam } from \"../../types/props.types\";\r\nimport ExerciseInList from \"../elements/ExerciseInList\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass ProgramPage extends React.Component<StoreRouterIdParam, {}> {\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.store.currentProgramStore.clear();\r\n      await this.props.store.currentProgramStore.getProgram(\r\n        parseInt(this.props.match.params.id)\r\n      );\r\n    } catch (error) {\r\n      console.log({ error });\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.code === 404) {\r\n        this.props.history.push(\"/notFound\");\r\n      } else if (error.code === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  backToProgramsList = () => {\r\n    this.props.history.push(\"/programs\");\r\n  };\r\n\r\n  render() {\r\n    const { program } = this.props.store.currentProgramStore;\r\n    const { user } = this.props.store.profileStore;\r\n\r\n    const exercises = (\r\n      <Row>\r\n        <Col md={12}>\r\n          <h4 className=\"m-b-30\">Exercises:</h4>\r\n          {program.exercises.length > 0 ? (\r\n            program.exercises.map((exrcise, i) => {\r\n              return (\r\n                <ExerciseInList\r\n                  quantity={exrcise.quantity}\r\n                  name={exrcise.name}\r\n                  id={exrcise.id}\r\n                  category={exrcise.category.name}\r\n                  key={i}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <p>Program doesn't have exercises</p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n    const editButton =\r\n      user?.role?.name === \"coach\" ? (\r\n        <Button\r\n          className=\"float-r m-t-30\"\r\n          variant=\"primary\"\r\n          onClick={() =>\r\n            this.props.history.push(`/programs/${program.id}/edit`)\r\n          }\r\n        >\r\n          Edit\r\n        </Button>\r\n      ) : null;\r\n\r\n    const info = (\r\n      <div>\r\n        <h3>{program.name}</h3>\r\n        <p className=\"t-a-just m-t-30\">\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo,\r\n          enim odit pariatur vitae beatae sint esse quam. Enim eligendi facere\r\n          pariatur aliquam quas maxime vitae assumenda magnam eum, porro\r\n          tenetur.\r\n        </p>\r\n        {editButton}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Container className=\"m-t-30\">\r\n        {program.id ? (\r\n          <Row>\r\n            <Col md={12} className=\"m-b-50\">\r\n              <Button variant=\"primary\" onClick={this.backToProgramsList}>\r\n                {\"Back\"}\r\n              </Button>\r\n            </Col>\r\n            <Col md={7}>{info}</Col>\r\n            <Col md={5} className=\"t-a-cen\">\r\n              <img className=\"program-main-img\" />\r\n            </Col>\r\n            <Col md={12}>{exercises}</Col>\r\n          </Row>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProgramPage);\r\n","import React from \"react\";\r\n\r\nconst NoFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoFound;\r\n","import React from \"react\";\r\nimport { ExerciseListProps } from \"../../types/props.types\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass DeleteExercise extends React.Component<ExerciseListProps, {}> {\r\n  deleteExercise = async () => {\r\n    try {\r\n      await this.props.store?.currentProgramStore.deleteExercise([\r\n        this.props.id,\r\n      ]);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={12} className=\"exercise-list-container\">\r\n        <div className=\"exercise-box\">\r\n          <img className=\"exercise-icon\" />\r\n          <h5 className=\"inline\">{this.props.name}</h5>\r\n          <Button variant=\"danger\" onClick={this.deleteExercise}>\r\n            Unassign\r\n          </Button>\r\n          <div className=\"exercise-info\">\r\n            <small>\r\n              <span className=\"bold-text\">Category:</span> {this.props.category}\r\n            </small>\r\n            <small>\r\n              {\" \"}\r\n              <span className=\"bold-text\">Quantity:</span> x\r\n              {this.props.quantity}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteExercise;\r\n","import React from \"react\";\r\nimport { ExerciseListProps } from \"../../types/props.types\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass AvailableExercise extends React.Component<ExerciseListProps, {}> {\r\n  addExercise = async () => {\r\n    try {\r\n      await this.props.store?.currentProgramStore.addExercise([this.props.id]);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={12} className=\"exercise-list-container\">\r\n        <div className=\"exercise-box\">\r\n          <img className=\"exercise-icon\" />\r\n          <h5 className=\"inline\">{this.props.name}</h5>\r\n          <Button variant=\"success\" onClick={this.addExercise}>\r\n            Assing\r\n          </Button>\r\n          <div className=\"exercise-info\">\r\n            <small>\r\n              <span className=\"bold-text\">Category:</span> {this.props.category}\r\n            </small>\r\n            <small>\r\n              {\" \"}\r\n              <span className=\"bold-text\">Quantity:</span> x\r\n              {this.props.quantity}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvailableExercise;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreRouterIdParam } from \"../../types/props.types\";\r\nimport DeleteExercise from \"../elements/DeleteExercise\";\r\nimport AvailableExercise from \"../elements/AvailableExercisesList\";\r\nimport { EditProgramState } from \"../../types/state.types\";\r\nimport { ValidationError } from \"../../types/customError.types\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass EditProgram extends React.Component<\r\n  StoreRouterIdParam,\r\n  EditProgramState\r\n> {\r\n  constructor(props: StoreRouterIdParam) {\r\n    super(props);\r\n    this.state = {\r\n      newName: \"\",\r\n      errorBody: \"\",\r\n      errorView: false,\r\n      successBody: \"\",\r\n      successView: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProgramAndEExercises();\r\n  }\r\n\r\n  validation() {\r\n    if (this.state.newName.length < 3) {\r\n      throw new ValidationError(`\"name\" is not allowed to be empty`, \"newName\");\r\n    }\r\n  }\r\n\r\n  async getProgramAndEExercises() {\r\n    try {\r\n      await this.props.store.currentProgramStore.clear();\r\n\r\n      await this.props.store.currentProgramStore.getProgram(\r\n        parseInt(this.props.match.params.id)\r\n      );\r\n      await this.props.store.exerciseStore.getExercises();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.code === 404) {\r\n        this.props.history.push(\"/notFound\");\r\n      } else if (error.code === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  updateProgram = async () => {\r\n    try {\r\n      this.validation();\r\n      console.log(1);\r\n      await this.props.store.currentProgramStore.editProgram(\r\n        this.state.newName\r\n      );\r\n      this.setState({\r\n        errorView: false,\r\n        successBody: \"The name of program has been updated\",\r\n        successView: true,\r\n      });\r\n    } catch (error) {\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.code === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n      if (error.field || error.body) {\r\n        this.setState({\r\n          errorBody: error.body,\r\n          errorView: true,\r\n          successView: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  backToProrgramPage = () => {\r\n    this.props.history.push(\r\n      `/programs/${this.props.store.currentProgramStore.program.id}`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { program } = this.props.store.currentProgramStore;\r\n    const { exerciseStore } = this.props.store;\r\n    const programExercises = (\r\n      <Col md={5}>\r\n        <h4 className=\"m-b-30\">Program's Exercises:</h4>\r\n        {program.exercises.length > 0 ? (\r\n          program.exercises.map((exrcise, i) => {\r\n            return (\r\n              <DeleteExercise\r\n                quantity={exrcise.quantity}\r\n                name={exrcise.name}\r\n                id={exrcise.id}\r\n                category={exrcise.category.name}\r\n                key={i}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Program doesn't have exercises</p>\r\n        )}\r\n      </Col>\r\n    );\r\n\r\n    const availableExercises = (\r\n      <Col md={5}>\r\n        <h4 className=\"m-b-30\">Available Exercises</h4>\r\n        {exerciseStore.getAvailable().map((exercise, i) => {\r\n          return (\r\n            <AvailableExercise\r\n              quantity={exercise.quantity}\r\n              key={i}\r\n              name={exercise.name}\r\n              id={exercise.id}\r\n              category={exercise.category.name}\r\n            />\r\n          );\r\n        })}\r\n      </Col>\r\n    );\r\n\r\n    const error = this.state.errorView ? (\r\n      <p className=\"text-danger\">\r\n        {this.state.errorBody.replace(\"newFields.name\", \"name\")}\r\n      </p>\r\n    ) : null;\r\n\r\n    const success = this.state.successView ? (\r\n      <p className=\"text-success\">{this.state.successBody}</p>\r\n    ) : null;\r\n\r\n    const exercisesTable = (\r\n      <Col md={12} className=\"m-t-70 m-b-50\">\r\n        <Row className=\"justify-content-between\">\r\n          {programExercises}\r\n          {availableExercises}\r\n        </Row>\r\n      </Col>\r\n    );\r\n\r\n    return (\r\n      <Container className=\"m-t-30\">\r\n        {program.id ? (\r\n          <Row>\r\n            <Col md={12} className=\"m-b-50\">\r\n              <Button variant=\"primary\" onClick={this.backToProrgramPage}>\r\n                {\"Back\"}\r\n              </Button>\r\n            </Col>\r\n            <Col md={6}>\r\n              <h3>{program.name}</h3>\r\n              <p className=\"m-t-50\">Edit Name</p>\r\n              <InputGroup className=\"edit-program-input\">\r\n                <FormControl\r\n                  className=\"mb-3 edit-program-input\"\r\n                  placeholder=\"Enter new name\"\r\n                  onChange={(e) => {\r\n                    this.setState({ newName: e.target.value });\r\n                  }}\r\n                />\r\n              </InputGroup>\r\n              <div>\r\n                {error}\r\n                {success}\r\n              </div>\r\n              <Button variant=\"primary\" onClick={this.updateProgram}>\r\n                Update\r\n              </Button>\r\n            </Col>\r\n            <Col md={6} className=\"t-a-cen\">\r\n              <img className=\"program-main-img\" />\r\n            </Col>\r\n            {exercisesTable}\r\n          </Row>\r\n        ) : null}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProgram);\r\n","import { registrationBody } from \"./../types/api.types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginRequest = (email: string, password: string) => {\r\n  return axios.post(\"/api/auth/login\", { email: email, password: password });\r\n};\r\n\r\nexport const profileRequest = () => {\r\n  return axios.get(\"/api/auth/profile\");\r\n};\r\n\r\nexport const coachUsersRequest = () => {\r\n  return axios.get(\"/api/auth/profile/users\");\r\n};\r\n\r\nexport const logOutRequest = () => {\r\n  return axios.post(\"/api/auth/logout\");\r\n};\r\n\r\nexport const registrationRequest = (newUser: registrationBody) => {\r\n  newUser.roleId = 1;\r\n  return axios.post(\"/api/auth/registration\", newUser);\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { RegistationState } from \"../../types/state.types\";\r\nimport { registrationRequest } from \"../../api/auth.api\";\r\nimport { ValidationError } from \"../../types/customError.types\";\r\nimport joi from \"@hapi/joi\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Registration extends React.Component<\r\n  StoreAndRouterProps,\r\n  RegistationState\r\n> {\r\n  constructor(props: StoreAndRouterProps) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      name: \"\",\r\n      age: 0,\r\n      ageError: \"\",\r\n      nameError: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      generalError: \"\",\r\n      errorView: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.store.profileStore.isAuth) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n\r\n  async clearErrors() {\r\n    await this.setState({\r\n      ageError: \"\",\r\n      nameError: \"\",\r\n      emailError: \"\",\r\n      passwordError: \"\",\r\n      generalError: \"\",\r\n    });\r\n  }\r\n\r\n  async validate() {\r\n    try {\r\n      const schema = joi.object({\r\n        name: joi.string().min(3).max(50).required(),\r\n        age: joi.number().integer().min(18).required().max(100),\r\n        email: joi\r\n          .string()\r\n          .email({ tlds: { allow: false } })\r\n          .min(5)\r\n          .max(100)\r\n          .required(),\r\n        password: joi.string().min(8).max(30).required(),\r\n        confirmPassword: joi\r\n          .string()\r\n          .min(8)\r\n          .max(30)\r\n          .required()\r\n          .valid(joi.ref(\"password\"))\r\n          .error(\r\n            (errors) =>\r\n              new Error(\"Your password and confirmation password do not match\")\r\n          ),\r\n      });\r\n      await schema.validateAsync({\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        confirmPassword: this.state.confirmPassword,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n    } catch (error) {\r\n      if (error.toString().includes(\"email\")) {\r\n        throw new ValidationError(error.toString(), \"emailError\");\r\n      } else if (error.toString().includes(\"password\" || \"confirmPassword\")) {\r\n        throw new ValidationError(error.toString(), \"passwordError\");\r\n      } else if (error.toString().includes(\"age\")) {\r\n        throw new ValidationError(error.toString(), \"ageError\");\r\n      } else if (error.toString().includes(\"name\")) {\r\n        throw new ValidationError(error.toString(), \"nameError\");\r\n      }\r\n      throw new ValidationError(error, \"generalError\");\r\n    }\r\n  }\r\n\r\n  handleInputs = (e: { target: { name: any; value: any } }) => {\r\n    const newState = { [e.target.name]: e.target.value } as Pick<\r\n      RegistationState,\r\n      keyof RegistationState\r\n    >;\r\n    this.setState(newState);\r\n  };\r\n\r\n  registration = async () => {\r\n    try {\r\n      await this.validate();\r\n      await registrationRequest({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        age: this.state.age,\r\n      });\r\n      this.props.history.push({\r\n        pathname: \"/login\",\r\n        state: `Now you can sign in with email: ${this.state.email}`,\r\n      });\r\n    } catch (e) {\r\n      if (e.response) {\r\n        await this.clearErrors();\r\n        this.setState({\r\n          errorView: true,\r\n          generalError: e.response.data.message,\r\n        });\r\n      } else if (e.field) {\r\n        const newState = {\r\n          [e.field]: e.body.toString(),\r\n          errorView: true,\r\n        } as Pick<RegistationState, keyof RegistationState>;\r\n        await this.clearErrors();\r\n        this.setState(newState);\r\n      } else {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center m-t-120\">\r\n          <Col md={12}>\r\n            <h4 className=\"m-b-50\">Sign Out:</h4>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <div>\r\n              <p>Name:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.nameError}</p>\r\n              ) : null}\r\n            </div>\r\n            <div>\r\n              <p>Email:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.emailError}</p>\r\n              ) : null}\r\n            </div>\r\n            <div>\r\n              <p>Age:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  name=\"age\"\r\n                  type=\"number\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter age\"\r\n                  value={this.state.age}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.ageError}</p>\r\n              ) : null}\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <div>\r\n              <p>Password:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div>\r\n              <p>Confirm password:</p>\r\n              <InputGroup className=\"input-wrap\">\r\n                <FormControl\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className=\"mb-3\"\r\n                  placeholder=\"Enter password again\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </InputGroup>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.passwordError}</p>\r\n              ) : null}\r\n            </div>\r\n            <div>\r\n              {this.state.errorView ? (\r\n                <p className=\"text-danger\">{this.state.generalError}</p>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"primary\" onClick={this.registration}>\r\n              Sign Out\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Registration);\r\n","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreAndRouterProps } from \"../../types/props.types\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass CoachUsers extends React.Component<StoreAndRouterProps, {}> {\r\n  componentDidMount() {\r\n    this.setUsers();\r\n  }\r\n\r\n  async setUsers() {\r\n    try {\r\n      await this.props.store.usersStore.clear();\r\n      await this.props.store.usersStore.getCoachUsers();\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.code === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { usersStore } = this.props.store;\r\n    return (\r\n      <Container className=\"m-t-30\">\r\n        <Row>\r\n          <Col md={7}>\r\n            <h3>List of users with your programs:</h3>\r\n            {usersStore.users.length > 0 ? (\r\n              usersStore.users.map((user, i) => {\r\n                return (\r\n                  <Col md={12} className=\"user-list-col\">\r\n                    <Link\r\n                      to={`/users/${user.id}`}\r\n                      key={i}\r\n                      className=\"list-link\"\r\n                    >\r\n                      <div className=\"user-list-item\">\r\n                        <div className=\"align-verical\">\r\n                          <img className=\"athelete-list-icon\" />\r\n                          <span>{`${++i}. ${user.name}`}</span>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </Col>\r\n                );\r\n              })\r\n            ) : (\r\n              <p>There are no users with your programs</p>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CoachUsers);\r\n","import React from \"react\";\r\nimport { UserProgramListProps } from \"../../types/props.types\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass UserProgram extends React.Component<UserProgramListProps, {}> {\r\n  unassignProgram = async () => {\r\n    try {\r\n      await this.props.store?.currentUserStore.unassignProgram(this.props.id);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Col md={12} className=\"program-list\">\r\n        <div className=\"list-program-box\">\r\n          <span className=\"list-program-title\">{this.props.name}</span>\r\n          <img className=\"program-icon float-r\" />\r\n          <div>\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"m-t-15\"\r\n              onClick={this.unassignProgram}\r\n            >\r\n              Unassign\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProgram;\r\n","import React from \"react\";\r\nimport { ProgramsListProps } from \"../../types/props.types\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass AvailableProgram extends React.Component<ProgramsListProps, {}> {\r\n  assignProgram = async () => {\r\n    try {\r\n      await this.props.store?.currentUserStore.assignProgram(this.props.id);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Col md={12} className=\"program-list\">\r\n        <div className=\"list-program-box\">\r\n          <span className=\"list-program-title\">{this.props.name}</span>\r\n          <img className=\"program-icon float-r\" />\r\n          <div>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"m-t-15\"\r\n              onClick={this.assignProgram}\r\n            >\r\n              Assign\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvailableProgram;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { StoreRouterIdParam } from \"../../types/props.types\";\r\nimport UserProgram from \"../elements/UserProgram\";\r\nimport AvailableProgram from \"../elements/AvailablePrograms\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass UserPage extends React.Component<StoreRouterIdParam, {}> {\r\n  async componentDidMount() {\r\n    try {\r\n      await this.props.store.currentUserStore.clear();\r\n      await this.props.store.programStore.clear();\r\n\r\n      await this.props.store.currentUserStore.getUser(\r\n        parseInt(this.props.match.params.id)\r\n      );\r\n      await this.props.store.programStore.setPrograms();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      if (error.code === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.code === 404) {\r\n        this.props.history.push(\"/notFound\");\r\n      } else if (error.code === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  backToUsersList = () => {\r\n    this.props.history.push(\"/users/athletes\");\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.store.currentUserStore;\r\n    const { programStore } = this.props.store;\r\n\r\n    const userInfo = (\r\n      <div>\r\n        <h3 className=\"m-b-30\">{user.name}</h3>\r\n        <p>Age {user.age}</p>\r\n        <p>Email: {user.email}</p>\r\n      </div>\r\n    );\r\n\r\n    const userPrograms = (\r\n      <Col md={5}>\r\n        <h4>User's Programs:</h4>\r\n        {user.programs?.map((program, i) => {\r\n          return <UserProgram key={i} name={program.name} id={program.id} />;\r\n        })}\r\n      </Col>\r\n    );\r\n\r\n    const availablePrograms = (\r\n      <Col md={5}>\r\n        <h4>Available Programs:</h4>\r\n        {programStore.programsThatNotAssign().map((program, i) => {\r\n          return (\r\n            <AvailableProgram id={program.id} name={program.name} key={i} />\r\n          );\r\n        })}\r\n      </Col>\r\n    );\r\n\r\n    const main = (\r\n      <Container className=\"m-t-30\">\r\n        <Row>\r\n          <Col md={12} className=\"m-b-50\">\r\n            <Button variant=\"primary\" onClick={this.backToUsersList}>\r\n              {\" \"}\r\n              {\"Back\"}\r\n            </Button>\r\n          </Col>\r\n          <Col md={6}>{userInfo}</Col>\r\n          <Col md={6}>\r\n            <img className=\"profile-main-athlete-pic float-r\" />\r\n          </Col>\r\n          <Col md={12} className=\"m-t-70 m-b-50\">\r\n            <Row className=\"justify-content-between\">\r\n              {userPrograms} {availablePrograms}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    return <div>{user.id > 0 ? main : <p>Loading...</p>}</div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(UserPage);\r\n","import axios from \"axios\";\r\n\r\nexport const userByIdRequest = (id: number) => {\r\n  return axios.get(`/api/users/${id}`);\r\n};\r\n\r\nexport const usersWithCoachPrograms = (id: number) => {\r\n  return axios.get(`/api/users/${id}/oneCoachPrograms`);\r\n};\r\n\r\nexport const unassignProgramRequest = (userId: number, programId: number) => {\r\n  return axios.patch(`/api/users/unAssignProgram`, { userId, programId });\r\n};\r\n\r\nexport const assignProgramRequest = (userId: number, programId: number) => {\r\n  return axios.patch(`/api/users/assignProgram`, { userId, programId });\r\n};\r\n\r\nexport const athleteRequest = () => {\r\n  return axios.get(\"/api/users/athletes\");\r\n};\r\n","import React from \"react\";\r\nimport { withRouter, RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { AthletesState } from \"../../types/state.types\";\r\nimport { athleteRequest } from \"../../api/user.api\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Athletes extends React.Component<RouteComponentProps, AthletesState> {\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let { data } = await athleteRequest();\r\n      data = data.map((user: any) => {\r\n        user.programs = [];\r\n        return user;\r\n      });\r\n      this.setState({ users: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response.status === 401) {\r\n        this.props.history.push(\"/login\");\r\n      } else if (error.response.status === 403) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"m-t-30\">\r\n        <Row>\r\n          <Col md={7}>\r\n            <h3 className=\"m-b-20\">List of Athletes:</h3>\r\n            <Row>\r\n              {this.state.users.map((user, i) => {\r\n                return (\r\n                  <Col md={12} className=\"user-list-col\">\r\n                    <Link\r\n                      to={`/users/${user.id}`}\r\n                      key={i}\r\n                      className=\"list-link\"\r\n                    >\r\n                      <div className=\"user-list-item\">\r\n                        <div className=\"align-verical\">\r\n                          <img className=\"athelete-list-icon\" />\r\n                          <span>{`${++i}. ${user.name}`}</span>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Athletes);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Navbar from \"./elements/Navbar\";\r\nimport Programs from \"./pages/Programs\";\r\nimport CreateProgram from \"./pages/CreateProgram\";\r\nimport ProgramPage from \"./pages/ProgramPage\";\r\nimport NotFound from \"./pages/404\";\r\nimport EditProgram from \"./pages/EditProgram\";\r\nimport Registration from \"./pages/Registration\";\r\nimport CoachUsers from \"./pages/CoachUsers\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport Athletes from \"./pages/Athletes\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className=\"wrap\">\r\n        <Router>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/registration\" exact component={Registration} />\r\n            <Route path=\"/profile\" exact component={Profile} />\r\n            <Route path=\"/users/athletes\" exact component={Athletes} />\r\n            <Route path=\"/users/:id\" exact component={UserPage} />\r\n            <Route path=\"/programs\" exact component={Programs} />\r\n            <Route path=\"/programs/users\" exact component={CoachUsers} />\r\n            <Route path=\"/programs/:id/edit\" exact component={EditProgram} />\r\n            <Route path=\"/programs/:id\" exact component={ProgramPage} />\r\n            <Route path=\"/createProgram\" exact component={CreateProgram} />\r\n            <Route path=\"/notFound\" exact component={NotFound} />\r\n            <Route path=\"*\" exact component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { editProgram } from \"../types/api.types\";\r\nimport axios from \"axios\";\r\n\r\nexport const programsRequest = () => {\r\n  return axios.get(\"/api/auth/profile/programs\");\r\n};\r\n\r\nexport const createProgramRequest = (name: string) => {\r\n  return axios.post(\"/api/programs\", { name });\r\n};\r\n\r\nexport const getProgramById = (id: number) => {\r\n  return axios.get(`/api/programs/${id}`);\r\n};\r\n\r\nexport const editProgramRequest = (data: editProgram) => {\r\n  return axios.patch(`/api/programs`, data);\r\n};\r\n\r\nexport const assingPrExerciseRequest = (exercisesIds: number[], id: number) => {\r\n  return axios.patch(\"/api/programs/addExercises\", { exercisesIds, id });\r\n};\r\n\r\nexport const deletePrExerciseRequest = (exercisesIds: number[], id: number) => {\r\n  return axios.patch(\"/api/programs/removeExercises\", { id: id, exercisesIds });\r\n};\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst category = types.model(\"Category\", {\r\n  id: types.integer,\r\n  name: types.string,\r\n});\r\n\r\nexport default category;\r\n","import { types, Instance } from \"mobx-state-tree\";\r\nimport category from \"./category\";\r\n\r\nconst exercise = types.model(\"Exercise\", {\r\n  id: types.integer,\r\n  name: types.string,\r\n  quantity: types.integer,\r\n  category: category,\r\n});\r\n\r\nexport type ExirciseModel = Instance<typeof exercise>;\r\n\r\nexport default exercise;\r\n","import { types, Instance, cast } from \"mobx-state-tree\";\r\nimport exercice, { ExirciseModel } from \"./exercise\";\r\n\r\nconst program = types\r\n  .model(\"Program\", {\r\n    id: types.integer,\r\n    name: types.string,\r\n    exercises: types.array(exercice),\r\n  })\r\n  .actions((self) => {\r\n    const setFields = (fields: any) => {\r\n      self.name = fields.name;\r\n      self.id = fields.id;\r\n      self.exercises = fields.exercises;\r\n    };\r\n\r\n    const setExercises = (exercises: Array<ExirciseModel>) => {\r\n      self.exercises = cast(exercises);\r\n    };\r\n\r\n    const setName = (name: string) => {\r\n      self.name = name;\r\n    };\r\n\r\n    return { setFields, setExercises, setName };\r\n  });\r\n\r\nexport type ProgramModel = Instance<typeof program>;\r\n\r\nexport default program;\r\n","import { programsRequest, createProgramRequest } from \"../api/programs.api\";\r\nimport { types, flow, getParent, cast } from \"mobx-state-tree\";\r\nimport program from \"../models/program\";\r\nimport { CustomError } from \"../types/customError.types\";\r\nimport rootStore from \"../stores/rootStore\";\r\n\r\nconst programStore = types\r\n  .model(\"ProgramStore\", {\r\n    programs: types.array(program),\r\n  })\r\n  .actions((self) => {\r\n    const clear = () => {\r\n      self.programs = cast([]);\r\n    };\r\n\r\n    const setPrograms = flow(function* () {\r\n      try {\r\n        const programs = yield programsRequest();\r\n        self.programs = programs.data;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const createProgram = flow(function* (name: string) {\r\n      try {\r\n        const newProgram = yield createProgramRequest(name);\r\n        return newProgram;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return { setPrograms, createProgram, clear };\r\n  })\r\n  .views((self) => {\r\n    const programsThatNotAssign = () => {\r\n      return self.programs.filter((program) => {\r\n        const assigned = getParent<typeof rootStore>(\r\n          self\r\n        ).currentUserStore.user.programs.some((userProgram) => {\r\n          return program.id === userProgram.id;\r\n        });\r\n        return !assigned;\r\n      });\r\n    };\r\n    return { programsThatNotAssign };\r\n  });\r\n\r\nexport default programStore;\r\n","import { ExirciseModel } from \"../models/exercise\";\r\nimport { getExercisesRequest } from \"../api/exercise.api\";\r\nimport { types, flow, getParent } from \"mobx-state-tree\";\r\nimport exercise from \"../models/exercise\";\r\nimport { CustomError } from \"../types/customError.types\";\r\nimport rootStore from \"./rootStore\";\r\n\r\nconst exerciseStore = types\r\n  .model(\"ExerciseStore\", {\r\n    exercises: types.optional(types.array(exercise), []),\r\n  })\r\n  .actions((self) => {\r\n    const getExercises = flow(function* () {\r\n      try {\r\n        const exercises = yield getExercisesRequest();\r\n        self.exercises = exercises.data;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return { getExercises };\r\n  })\r\n  .views((self) => {\r\n    const getAvailable = () => {\r\n      return self.exercises.filter((exercise) => {\r\n        const inProgram = getParent<typeof rootStore>(\r\n          self\r\n        ).currentProgramStore.program.exercises.some((prExercise) => {\r\n          return exercise.id === prExercise.id;\r\n        });\r\n        return !inProgram;\r\n      }) as Array<ExirciseModel>;\r\n    };\r\n\r\n    return { getAvailable };\r\n  });\r\n\r\nexport default exerciseStore;\r\n","import axios from \"axios\";\r\n\r\nexport const getExercisesRequest = () => {\r\n  return axios.get(\"/api/exercises\");\r\n};\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nconst role = types.model(\"Role\", {\r\n  id: types.integer,\r\n  name: types.string,\r\n});\r\n\r\nexport default role;\r\n","import { types, Instance } from \"mobx-state-tree\";\r\nimport role from \"./role\";\r\nimport program from \"./program\";\r\n\r\nconst user = types\r\n  .model(\"user\", {\r\n    id: types.integer,\r\n    name: types.string,\r\n    email: types.string,\r\n    age: types.maybeNull(types.integer),\r\n    role: role,\r\n    programs: types.optional(types.array(program), []),\r\n  })\r\n  .actions((self) => {\r\n    const setFields = (fields: any) => {\r\n      self.email = fields.email;\r\n      self.name = fields.name;\r\n      self.age = fields.age;\r\n      self.id = fields.id;\r\n      self.role = fields.role;\r\n    };\r\n\r\n    const setFieldsWithPrograms = (fields: any) => {\r\n      self.email = fields.email;\r\n      self.name = fields.name;\r\n      self.age = fields.age;\r\n      self.id = fields.id;\r\n      self.role = fields.role;\r\n      self.programs = fields.programs;\r\n    };\r\n\r\n    return { setFields, setFieldsWithPrograms };\r\n  });\r\n\r\nexport type UserModel = Instance<typeof user>;\r\n\r\nexport default user;\r\n","import { coachUsersRequest } from \"../api/auth.api\";\r\nimport { types, flow, getParent, cast } from \"mobx-state-tree\";\r\nimport user from \"../models/user\";\r\nimport { CustomError } from \"../types/customError.types\";\r\nimport rootStore from \"./rootStore\";\r\n\r\nconst usersStore = types\r\n  .model(\"usersStore\", {\r\n    users: types.optional(types.array(user), []),\r\n  })\r\n  .actions((self) => {\r\n    const clear = () => {\r\n      self.users = cast([]);\r\n    };\r\n    const getCoachUsers = flow(function* () {\r\n      try {\r\n        const users = yield coachUsersRequest();\r\n        self.users = users.data;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n    return { getCoachUsers, clear };\r\n  });\r\n\r\nexport default usersStore;\r\n","import { logOutRequest } from \"../api/auth.api\";\r\nimport { profileRequest } from \"../api/auth.api\";\r\nimport { types, flow, cast } from \"mobx-state-tree\";\r\nimport user from \"../models/user\";\r\nimport { loginRequest } from \"../api/auth.api\";\r\nimport { CustomError } from \"../types/customError.types\";\r\n\r\nexport const defaultUser = {\r\n  id: 0,\r\n  name: \"\",\r\n  email: \"\",\r\n  role: { id: 0, name: \"\" },\r\n};\r\n\r\nconst profileStore = types\r\n  .model(\"ProfileStore\", {\r\n    user: types.maybeNull(user),\r\n    isAuth: types.boolean,\r\n  })\r\n  .actions((self) => {\r\n    const cleanAuthData = () => {\r\n      self.isAuth = false;\r\n      self.user = cast(defaultUser);\r\n    };\r\n    const setIsAuth = (authStatus: boolean) => {\r\n      self.isAuth = authStatus;\r\n    };\r\n\r\n    const setLogin = flow(function* (\r\n      emailInput: string,\r\n      passwordInput: string\r\n    ) {\r\n      try {\r\n        const user = yield loginRequest(emailInput, passwordInput);\r\n        console.log(user);\r\n        const { name, email, age, id, role } = user.data;\r\n        self.user?.setFields({ name, email, age, id, role });\r\n        self.isAuth = true;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          self.isAuth = false;\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const setProfile = flow(function* () {\r\n      try {\r\n        const profile = yield profileRequest();\r\n        const { name, email, age, id, role } = profile.data;\r\n        self.user?.setFields({ name, email, age, id, role });\r\n        self.isAuth = true;\r\n      } catch (error) {\r\n        self.isAuth = false;\r\n        if (error.response) {\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const logOut = flow(function* () {\r\n      try {\r\n        yield logOutRequest();\r\n        cleanAuthData();\r\n      } catch (error) {\r\n        if (error.response) {\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return { setLogin, setProfile, setIsAuth, cleanAuthData, logOut };\r\n  })\r\n  .views((self) => {\r\n    const isAuthAndCoach = (): boolean => {\r\n      if (self.isAuth && self.user?.role.name === \"coach\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    return { isAuthAndCoach };\r\n  });\r\n\r\nexport default profileStore;\r\n","import {\r\n  editProgramRequest,\r\n  deletePrExerciseRequest,\r\n  getProgramById,\r\n  assingPrExerciseRequest,\r\n} from \"../api/programs.api\";\r\nimport { types, flow, getParent, cast } from \"mobx-state-tree\";\r\nimport program from \"../models/program\";\r\nimport { CustomError } from \"../types/customError.types\";\r\nimport rootStore from \"../stores/rootStore\";\r\n\r\nexport const defaultProgram = {\r\n  id: 0,\r\n  name: \"\",\r\n};\r\n\r\nconst currentProgramStore = types\r\n  .model(\"CurrentProgramStore\", {\r\n    program,\r\n  })\r\n  .actions((self) => {\r\n    const clear = () => {\r\n      self.program = cast(defaultProgram);\r\n    };\r\n\r\n    const getProgram = flow(function* (programId: number) {\r\n      try {\r\n        const program = yield getProgramById(programId);\r\n        self.program.setFields({\r\n          name: program.data.name,\r\n          id: program.data.id,\r\n          exercises: program.data.exercises,\r\n        });\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const editProgram = flow(function* (name: string) {\r\n      try {\r\n        const updatedProgram = yield editProgramRequest({\r\n          id: self.program.id,\r\n          newFields: { name },\r\n        });\r\n        self.program.setName(updatedProgram.data.name);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const deleteExercise = flow(function* (exercisesIds: number[]) {\r\n      try {\r\n        const updatedProgram = yield deletePrExerciseRequest(\r\n          exercisesIds,\r\n          self.program.id\r\n        );\r\n        self.program.setExercises(updatedProgram.data.exercises);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const addExercise = flow(function* (exercisesIds: number[]) {\r\n      try {\r\n        const updatedProgram = yield assingPrExerciseRequest(\r\n          exercisesIds,\r\n          self.program.id\r\n        );\r\n        self.program.setExercises(updatedProgram.data.exercises);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return {\r\n      clear,\r\n      getProgram,\r\n      editProgram,\r\n      deleteExercise,\r\n      addExercise,\r\n    };\r\n  });\r\n\r\nexport default currentProgramStore;\r\n","import {\r\n  unassignProgramRequest,\r\n  assignProgramRequest,\r\n  usersWithCoachPrograms,\r\n} from \"../api/user.api\";\r\nimport {} from \"../api/programs.api\";\r\nimport { types, flow, getParent, cast } from \"mobx-state-tree\";\r\nimport { CustomError } from \"../types/customError.types\";\r\nimport rootStore from \"../stores/rootStore\";\r\nimport user from \"../models/user\";\r\n\r\nexport const defaultCurrentUserStore = {\r\n  id: 0,\r\n  name: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  programs: [],\r\n  role: { id: 0, name: \"\" },\r\n};\r\n\r\nconst currentUserStore = types\r\n  .model(\"currentUserStore\", {\r\n    user,\r\n  })\r\n  .actions((self) => {\r\n    const clear = () => {\r\n      self.user = cast(defaultCurrentUserStore);\r\n    };\r\n\r\n    const getUser = flow(function* (userId: number) {\r\n      try {\r\n        const { data } = yield usersWithCoachPrograms(userId);\r\n        self.user.setFieldsWithPrograms(data);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const unassignProgram = flow(function* (programId: number) {\r\n      try {\r\n        const { data } = yield unassignProgramRequest(self.user.id, programId);\r\n        self.user.programs = cast(\r\n          self.user.programs.filter((pr) => {\r\n            return pr.id !== programId;\r\n          })\r\n        );\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    const assignProgram = flow(function* (programId: number) {\r\n      try {\r\n        const { data } = yield assignProgramRequest(self.user.id, programId);\r\n        self.user.programs = data.programs;\r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            getParent<typeof rootStore>(self).profileStore.setIsAuth(false);\r\n          }\r\n          throw new CustomError(\r\n            error.response.data.message,\r\n            error.response.status\r\n          );\r\n        }\r\n        throw error;\r\n      }\r\n    });\r\n\r\n    return {\r\n      clear,\r\n      getUser,\r\n      assignProgram,\r\n      unassignProgram,\r\n    };\r\n  });\r\n\r\nexport default currentUserStore;\r\n","import { types, Instance } from \"mobx-state-tree\";\r\nimport programStore from \"./programsStore\";\r\nimport exerciseStore from \"./exerciseStore\";\r\nimport usersStore from \"./usersStore\";\r\nimport profileStore from \"./profileStore\";\r\nimport currentProgramStore from \"./currentProgramStore\";\r\nimport currentUserStore from \"../stores/currentUserStore\";\r\n\r\nconst rootStore = types.model(\"RootStore\", {\r\n  programStore,\r\n  currentProgramStore,\r\n  currentUserStore,\r\n  exerciseStore,\r\n  profileStore,\r\n  usersStore,\r\n});\r\n\r\nexport const createRootStore = rootStore.create({\r\n  programStore: { programs: [] },\r\n  currentProgramStore: {\r\n    program: {\r\n      id: 0,\r\n      name: \"\",\r\n    },\r\n  },\r\n  currentUserStore: {\r\n    user: {\r\n      id: 0,\r\n      name: \"\",\r\n      email: \"\",\r\n      age: 0,\r\n      programs: [],\r\n      role: { id: 0, name: \"\" },\r\n    },\r\n  },\r\n  exerciseStore: { exercises: [] },\r\n  profileStore: {\r\n    user: { id: 0, name: \"\", email: \"\", role: { id: 0, name: \"\" } },\r\n    isAuth: false,\r\n  },\r\n  usersStore: { users: [] },\r\n});\r\n\r\nexport default rootStore;\r\n\r\nexport type Root = Instance<typeof rootStore>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\n\r\nimport { Provider } from \"mobx-react\";\r\n\r\nimport { createRootStore } from \"./stores/rootStore\";\r\nimport { onPatch } from \"mobx-state-tree\";\r\n\r\nconst store = createRootStore;\r\n\r\nonPatch(store, (patch) => {\r\n  console.log(patch);\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}